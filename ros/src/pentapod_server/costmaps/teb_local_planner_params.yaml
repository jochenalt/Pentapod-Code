odom_topic: /odom
map_frame: /map

# Trajectory
# teb_autosize: True
#dt_ref: 0.4
#dt_hysteresis: 0.3                          # hysteresis of path changes. If too small, in narrow corridors robot osscilates between the two walls.  
# global_plan_overwrite_orientation: True    # global plan has not orientation but xy only, so local plan needs to adapt the orientation to the goal. Default: True
max_global_plan_lookahead_dist: 1.5
allow_init_backward_motion: true

# Robot acceleration and speed limits
max_vel_x: 0.100
max_vel_x_backwards: 0.100
max_vel_y: 0.100
max_vel_y_backwards: 0.100

max_vel_theta: 0.2
min_vel_theta: -0.2 
acc_lim_x: 0.06
acc_lim_y: 0.06
acc_lim_theta: 0.06
min_in_place_vel_theta: 0.0

# Footprint model is a point in order to save CPU, distance is kept min_obstacle_dist
# change that to a proper insect modelling without turning radius
footprint_model: 
  type: point            # types: "point", "circular", "two_circles", "line", "polygon" type: "line"

# GoalTolerance is smaller than a grid cell 
xy_goal_tolerance: 0.05
yaw_goal_tolerance: 0.05

# Trajectory scoring parameters  
#occdist_scale: 0.5     # The weighting for how much the controller should attempt to avoid obstacles. default 0.5
#pdist_scale: 0.6       # The weighting for how much the controller should stay close to the path it was given. default 0.6
#gdist_scale: 0.8 
  
# Obstacles
min_obstacle_dist: 0.36          # minumum distance from outer shape of robot to any obstacle.
inflation_dist: 0.80             # Buffer zone around obstacles with non-zero penalty costs (should be larger than min_obstacle_dist in order to take effect). Also refer to the weight weight_inflation. Default 0.0
include_costmap_obstacles: True
costmap_obstacles_behind_robot_dist: 0.5
obstacle_poses_affected: 30      # Default 30
costmap_converter_plugin: ""
costmap_converter_spin_thread: True
costmap_converter_rate: 5

# Optimization
optimization_activate: True
optimization_verbose: False
penalty_epsilon: 0.05
# Optimization weight for satisfying the non-holonomic kinematics. Set to 0 since strafing has equal cost like driving forward
weight_kinematics_nh: 0 
weight_kinematics_forward_drive: 0          # Optimization weight for forcing the robot to choose only forward directions (positive transl. velocities). A small weight (e.g. 1.0) still allows driving backwards. Default 1.0
weight_kinematics_turning_radius: 0

# Homotopy Class Planner
enable_homotopy_class_planning: False
#enable_multithreading: True
#simple_exploration: False
#max_number_classes: 1
#selection_cost_hysteresis: 1.0
#selection_obst_cost_scale: 1.0
#selection_alternative_time_cost: False
#roadmap_graph_no_samples: 15
#roadmap_graph_area_width: 5
#h_signature_prescaler: 0.5
#h_signature_threshold: 0.1
#obstacle_keypoint_offset: 0.1
#obstacle_heading_threshold: 0.45
#visualize_hc_graph: False
